{"ast":null,"code":"import _classCallCheck from \"/Users/jordandrake/Desktop/smartbrain/facerecognitionbrain/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/jordandrake/Desktop/smartbrain/facerecognitionbrain/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/jordandrake/Desktop/smartbrain/facerecognitionbrain/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/jordandrake/Desktop/smartbrain/facerecognitionbrain/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/jordandrake/Desktop/smartbrain/facerecognitionbrain/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/jordandrake/Desktop/smartbrain/facerecognitionbrain/src/App.js\";\nimport React, { Component } from 'react';\nimport Particles from 'react-particles-js';\nimport FaceRecognition from './components/FaceRecognition/FaceRecognition';\nimport Navigation from './components/Navigation/Navigation';\nimport SignIn from './components/SignIn/SignIn';\nimport Register from './components/Register/Register';\nimport Logo from './components/Logo/Logo';\nimport ImageLinkForm from './components/ImageLinkForm/ImageLinkForm';\nimport Rank from './components/Rank/Rank';\nimport './App.css';\nimport Clarifai from 'clarifai';\nvar app = new Clarifai.App({\n  apiKey: 'c7a5279210124c589f54ad9f40296191'\n});\nvar particlesOptions = {\n  particles: {\n    number: {\n      value: 100,\n      density: {\n        enable: true,\n        value_area: 800\n      }\n    }\n  }\n};\n\nvar App =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(App, _Component);\n\n  function App() {\n    var _this;\n\n    _classCallCheck(this, App);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(App).call(this));\n\n    _this.loadUser = function (data) {\n      _this.setState({\n        user: {\n          id: data.id,\n          name: data.name,\n          email: data.email,\n          entries: data.entries,\n          joined: data.joined\n        }\n      });\n    };\n\n    _this.calculateFaceLocation = function (response) {\n      var image = document.getElementById('inputImage');\n      var width = Number(image.width);\n      var height = Number(image.height);\n      var coordinates = [];\n      response.outputs.forEach(function (output) {\n        return output.data.regions.forEach(function (regions) {\n          var clarifaiFace = regions.region_info.bounding_box;\n          coordinates.push({\n            leftCol: clarifaiFace.left_col * width,\n            topRow: clarifaiFace.top_row * height,\n            rightCol: width - clarifaiFace.right_col * width,\n            bottomRow: height - clarifaiFace.bottom_row * height\n          });\n        });\n      });\n      return coordinates;\n    };\n\n    _this.displayFaceBox = function (box) {\n      console.log({\n        box: box\n      });\n\n      _this.setState({\n        box: box\n      });\n    };\n\n    _this.onInputChange = function (event) {\n      _this.setState({\n        input: event.target.value\n      });\n    };\n\n    _this.onPictureSubmit = function () {\n      _this.setState({\n        imageUrl: _this.state.input\n      });\n\n      app.models.predict(Clarifai.FACE_DETECT_MODEL, _this.state.input).then(function (response) {\n        if (response) {\n          fetch('http://localhost:3000/image', {\n            method: 'put',\n            headers: {\n              'Content-Type': 'application/json'\n            },\n            body: JSON.stringify({\n              id: _this.state.user.id\n            })\n          }).then(function (response) {\n            return response.json();\n          }).then(function (count) {\n            _this.setState(Object.assign(_this.state.user, {\n              entries: count\n            }));\n          });\n        }\n\n        _this.displayFaceBox(_this.calculateFaceLocation(response));\n      }).catch(function (err) {\n        return console.log(err);\n      });\n    };\n\n    _this.onRouteChange = function (route) {\n      if (route === 'signout') {\n        _this.setState({\n          isSignedIn: false\n        });\n      } else if (route === 'home') {\n        _this.setState({\n          isSignedIn: true\n        });\n      }\n\n      _this.setState({\n        route: route\n      });\n    };\n\n    _this.state = {\n      input: '',\n      imageUrl: '',\n      box: {},\n      route: 'signin',\n      isSignedIn: false,\n      user: {\n        id: '',\n        name: '',\n        email: '',\n        entries: '',\n        joined: new Date()\n      }\n    };\n    return _this;\n  }\n\n  _createClass(App, [{\n    key: \"render\",\n    value: function render() {\n      var _this$state = this.state,\n          isSignedIn = _this$state.isSignedIn,\n          imageUrl = _this$state.imageUrl,\n          route = _this$state.route,\n          box = _this$state.box;\n      return React.createElement(\"div\", {\n        className: \"App\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 126\n        },\n        __self: this\n      }, React.createElement(Particles, {\n        className: \"particles\",\n        params: particlesOptions,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 127\n        },\n        __self: this\n      }), React.createElement(Navigation, {\n        isSignedIn: isSignedIn,\n        onRouteChange: this.onRouteChange,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 130\n        },\n        __self: this\n      }), route === 'home' ? React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 132\n        },\n        __self: this\n      }, React.createElement(Logo, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 133\n        },\n        __self: this\n      }), React.createElement(Rank, {\n        name: this.state.user.name,\n        entries: this.state.user.entries,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 134\n        },\n        __self: this\n      }), React.createElement(ImageLinkForm, {\n        onInputChange: this.onInputChange,\n        onPictureSubmit: this.onPictureSubmit,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 135\n        },\n        __self: this\n      }), React.createElement(FaceRecognition, {\n        box: box,\n        imageUrl: imageUrl,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 139\n        },\n        __self: this\n      })) : route === 'signin' ? React.createElement(SignIn, {\n        loadUser: this.loadUser,\n        onRouteChange: this.onRouteChange,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 143\n        },\n        __self: this\n      }) : React.createElement(Register, {\n        loadUser: this.loadUser,\n        onRouteChange: this.onRouteChange,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 144\n        },\n        __self: this\n      }));\n    }\n  }]);\n\n  return App;\n}(Component);\n\nexport default App;","map":{"version":3,"sources":["/Users/jordandrake/Desktop/smartbrain/facerecognitionbrain/src/App.js"],"names":["React","Component","Particles","FaceRecognition","Navigation","SignIn","Register","Logo","ImageLinkForm","Rank","Clarifai","app","App","apiKey","particlesOptions","particles","number","value","density","enable","value_area","loadUser","data","setState","user","id","name","email","entries","joined","calculateFaceLocation","response","image","document","getElementById","width","Number","height","coordinates","outputs","forEach","output","regions","clarifaiFace","region_info","bounding_box","push","leftCol","left_col","topRow","top_row","rightCol","right_col","bottomRow","bottom_row","displayFaceBox","box","console","log","onInputChange","event","input","target","onPictureSubmit","imageUrl","state","models","predict","FACE_DETECT_MODEL","then","fetch","method","headers","body","JSON","stringify","json","count","Object","assign","catch","err","onRouteChange","route","isSignedIn","Date"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport Particles from 'react-particles-js';\nimport FaceRecognition from './components/FaceRecognition/FaceRecognition';\nimport Navigation from './components/Navigation/Navigation';\nimport SignIn from './components/SignIn/SignIn';\nimport Register from './components/Register/Register';\nimport Logo from './components/Logo/Logo';\nimport ImageLinkForm from './components/ImageLinkForm/ImageLinkForm';\nimport Rank from './components/Rank/Rank';\nimport './App.css';\n\nimport Clarifai from 'clarifai';\n\nconst app = new Clarifai.App({\n apiKey: 'c7a5279210124c589f54ad9f40296191'\n});\n\nconst particlesOptions = {\n  particles: {\n    number: {\n      value: 100,\n      density: {\n        enable: true,\n        value_area: 800\n      }\n    }\n  }\n}\n\nclass App extends Component {\n  constructor() {\n    super();\n    this.state = {\n      input: '',\n      imageUrl: '',\n      box: {},\n      route: 'signin',\n      isSignedIn: false,\n      user: {\n        id: '',\n        name: '',\n        email: '',\n        entries: '',\n        joined: new Date()\n      }\n    }\n  }\n\n  loadUser = (data) => {\n    this.setState({user: {\n      id: data.id,\n      name: data.name,\n      email: data.email,\n      entries: data.entries,\n      joined: data.joined\n    }})\n  }\n\n  calculateFaceLocation = (response) => {\n    const image = document.getElementById('inputImage');\n    const width = Number(image.width);\n    const height = Number(image.height);\n\n    const coordinates = []\n  \n    response.outputs.forEach(output => {\n      return output.data.regions.forEach(regions => {\n        const clarifaiFace = regions.region_info.bounding_box;\n        coordinates.push({\n          leftCol: clarifaiFace.left_col * width,\n          topRow: clarifaiFace.top_row * height,\n          rightCol: width - (clarifaiFace.right_col * width),\n          bottomRow: height - (clarifaiFace.bottom_row * height)\n        })\n      })\n    })\n    return coordinates;\n  }\n\n  displayFaceBox = (box) => {\n    console.log({box});\n    this.setState({box: box});\n  }\n\n  onInputChange = (event) => {\n    this.setState({input: event.target.value});\n  }\n\n  onPictureSubmit = () => {\n    this.setState({imageUrl: this.state.input});\n    app.models\n      .predict(\n        Clarifai.FACE_DETECT_MODEL,\n        this.state.input)\n      .then(response => {\n        if (response) {\n          fetch('http://localhost:3000/image', {\n            method: 'put',\n            headers: {'Content-Type': 'application/json'},\n            body: JSON.stringify({\n              id: this.state.user.id\n            })\n          })\n            .then(response => response.json())\n            .then(count => {\n              this.setState(Object.assign(this.state.user, { entries: count }))\n              })\n        }\n        this.displayFaceBox(this.calculateFaceLocation(response))\n      })\n      .catch(err => console.log(err))\n  }\n\n  onRouteChange = (route) => {\n    if (route === 'signout') {\n      this.setState({isSignedIn: false})\n    } else if (route === 'home') {\n      this.setState({isSignedIn: true})\n    }\n    this.setState({route: route});\n  }\n\n  render() {\n    const { isSignedIn, imageUrl, route, box } = this.state;\n    return (\n      <div className=\"App\">\n      <Particles className=\"particles\"\n        params={particlesOptions}\n      />\n        <Navigation isSignedIn={isSignedIn} onRouteChange={this.onRouteChange} />\n        { route === 'home'\n          ? <div>\n              <Logo />\n              <Rank name={this.state.user.name} entries={this.state.user.entries}/>\n              <ImageLinkForm\n                onInputChange={this.onInputChange}\n                onPictureSubmit={this.onPictureSubmit}\n              />\n              <FaceRecognition box={box} imageUrl={imageUrl}/>\n            </div>\n          : (\n              route === 'signin'\n              ? <SignIn loadUser={this.loadUser} onRouteChange={this.onRouteChange} />\n              : <Register loadUser={this.loadUser} onRouteChange={this.onRouteChange} />\n            )\n        }\n      </div>\n    );\n  }\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}